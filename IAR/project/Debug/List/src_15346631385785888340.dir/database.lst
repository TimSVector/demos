###############################################################################
#
# IAR ANSI C/C++ Compiler V9.60.2.399/W64 for ARM         24/Sep/2025  10:21:31
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\vector\customers\snph\IAR\code\database\src\database.c
#    Command line                 =
#        -f
#        D:\vector\customers\snph\IAR\Debug\Obj\src_15346631385785888340.dir\database.o.rsp
#        (D:\vector\customers\snph\IAR\code\database\src\database.c -lC
#        D:\vector\customers\snph\IAR\Debug\List\src_15346631385785888340.dir
#        -o D:\vector\customers\snph\IAR\Debug\Obj\src_15346631385785888340.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --libc++ -I
#        D:\vector\customers\snph\IAR\code\database\inc\ -I
#        D:\vector\customers\snph\IAR\code\encrypt\inc\ -I
#        D:\vector\customers\snph\IAR\code\order_entry\inc\ -I
#        D:\vector\customers\snph\IAR\code\utils\inc\ -On) --dependencies=n
#        D:\vector\customers\snph\IAR\Debug\Obj\src_15346631385785888340.dir\database.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        D:\vector\customers\snph\IAR\Debug\List\src_15346631385785888340.dir\database.lst
#    Object file                  =
#        D:\vector\customers\snph\IAR\Debug\Obj\src_15346631385785888340.dir\database.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  1
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#
###############################################################################

D:\vector\customers\snph\IAR\code\database\src\database.c
      1           /***************************************************************************************
      2           * Unit: manager.c                                                                     *
      3           *                                                                                     *
      4           * Purpose: Used as a demostration module for point of sales termainal                 *
      5           *                                                                                     *
      6           * Public API:                                                                         *
      7           *      - struct table_data_type Get_Record(table_index_type Table)                    *
      8           *      - void Update_Record(table_index_type Table,                                   *
      9           *           struct table_data_type Data)                                              *
     10           *      - void Remove_Record(table_index_type Table)                                   *
     11           *                                                                                     *
     12           *                                                                                     *
     13           * Private API:                                                                        *
     14           *      - None                                                                         *
     15           *                                                                                     *
     16           ***************************************************************************************/
     17          
     18          /***************************************************************************************
     19           *                             Program Headers                                         *
     20           ***************************************************************************************/
     21          
     22          
     23          #include "ctypes.h"
     24          #include "linked_list.h"
     25          #include "database.h"
     26          
     27          /***************************************************************************************
     28           *                             Local Defines                                           *
     29           ***************************************************************************************/
     30          
     31          /**************************************************************************************
     32           *  Subprogram: Get_Record                                                            *
     33           *                                                                                    * 
     34           *  Purpose: Sets the unit private variable CurrentColor                              *
     35           *                                                                                    * 
     36           *  Inputs:                                                                           *
     37           *       - Table - uint32_t                                                           *
     38           *                                                                                    * 
     39           *  Outputs:                                                                          *
     40           *       - struct data_type                                                           *
     41           *                                                                                    * 
     42           **************************************************************************************/
     43          

   \                                 In section .text, align 2, keep-with-next
     44          data_type Get_Record(uint32_t Table)
     45          {
   \                     Get_Record: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB092             SUB      SP,SP,#+72
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
     46            // setup the local variables 
     47            struct DataItem * dPtr;
     48            struct DataItem dataItem = BLANK_DATA_ITEM;
   \        0x8   0xA807             ADD      R0,SP,#+28
   \        0xA   0x212C             MOVS     R1,#+44
   \        0xC   0x.... 0x....      BL       __aeabi_memclr4
     49          
     50            // set the search key (table) in the data items
     51            dataItem.table = Table;
   \       0x10   0x9507             STR      R5,[SP, #+28]
     52          
     53            // seatch for the data item
     54            dPtr = findData(dataItem);
   \       0x12   0xA907             ADD      R1,SP,#+28
   \       0x14   0xB084             SUB      SP,SP,#+16
   \       0x16   0x4668             MOV      R0,SP
   \       0x18   0x222C             MOVS     R2,#+44
   \       0x1A   0x.... 0x....      BL       __aeabi_memcpy4
   \       0x1E   0xBC0F             POP      {R0-R3}
   \       0x20   0x.... 0x....      BL       findData
   \       0x24   0x0006             MOVS     R6,R0
     55            
     56            // if the items was NOT found...
     57            if (dPtr == NULL)
   \       0x26   0x2E00             CMP      R6,#+0
   \       0x28   0xD104             BNE.N    ??Get_Record_0
     58            {
     59              // Insert the item into the list 
     60              InsertDataItem(&dataItem);
   \       0x2A   0xA807             ADD      R0,SP,#+28
   \       0x2C   0x.... 0x....      BL       InsertDataItem
     61              
     62              // set the data pointer to the current data items
     63              dPtr = &dataItem;
   \       0x30   0xA807             ADD      R0,SP,#+28
   \       0x32   0x0006             MOVS     R6,R0
     64            }
     65          
     66            // return the table data from the data pointer
     67            return (dPtr->Data);
   \                     ??Get_Record_0: (+1)
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x1D31             ADDS     R1,R6,#+4
   \       0x38   0x2228             MOVS     R2,#+40
   \       0x3A   0x.... 0x....      BL       __aeabi_memcpy4
   \       0x3E   0xB012             ADD      SP,SP,#+72
   \       0x40   0xBD70             POP      {R4-R6,PC}
     68          }

   \                                 In section .rodata, align 4
   \        0x0   0x0000'0000        DC32 0
   \        0x4   0x00 0x00          DC8 0, 0
   \        0x6   0x0000             DC16 0
   \        0x8   0x00               DC8 0
   \        0x9   0x00               DC8 ""
   \        0xA                      DS8 9
   \       0x13   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00
   \       0x27                      DS8 1
   \       0x28   0x0000'0000        DC32 0x0
     69          
     70          /**************************************************************************************
     71           *  Subprogram: Update_Record                                                         *
     72           *                                                                                    * 
     73           *  Purpose: Updates the current table record with input information                  *
     74           *                                                                                    * 
     75           *  Inputs:                                                                           *
     76           *       - Table - int                                                                *
     77           *       - Data - struct data_type                                                    *
     78           *                                                                                    * 
     79           *  Outputs:                                                                          *
     80           *       - None                                                                       *
     81           *                                                                                    * 
     82           **************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     83          void Update_Record(uint32_t Table, data_type Data)
     84          {
   \                     Update_Record: (+1)
   \        0x0   0xB40E             PUSH     {R1-R3}
   \        0x2   0xB530             PUSH     {R4,R5,LR}
   \        0x4   0xB092             SUB      SP,SP,#+72
   \        0x6   0x0005             MOVS     R5,R0
     85            // setup the local variables
     86            struct DataItem dataItem = BLANK_DATA_ITEM;
   \        0x8   0xA807             ADD      R0,SP,#+28
   \        0xA   0x212C             MOVS     R1,#+44
   \        0xC   0x.... 0x....      BL       __aeabi_memclr4
     87            struct DataItem * entry;
     88          
     89            // set the search key (table) in the data items
     90            dataItem.table = Table;
   \       0x10   0x9507             STR      R5,[SP, #+28]
     91          
     92            // seatch for the data item
     93            entry = findData(dataItem);
   \       0x12   0xA907             ADD      R1,SP,#+28
   \       0x14   0xB084             SUB      SP,SP,#+16
   \       0x16   0x4668             MOV      R0,SP
   \       0x18   0x222C             MOVS     R2,#+44
   \       0x1A   0x.... 0x....      BL       __aeabi_memcpy4
   \       0x1E   0xBC0F             POP      {R0-R3}
   \       0x20   0x.... 0x....      BL       findData
   \       0x24   0x0004             MOVS     R4,R0
     94            
     95            // if the items was found...
     96            if (entry != NULL)
   \       0x26   0x2C00             CMP      R4,#+0
   \       0x28   0xD004             BEQ.N    ??Update_Record_0
     97            {
     98              // set the data
     99              entry->Data = Data;
   \       0x2A   0x1D20             ADDS     R0,R4,#+4
   \       0x2C   0xA915             ADD      R1,SP,#+84
   \       0x2E   0x2228             MOVS     R2,#+40
   \       0x30   0x.... 0x....      BL       __aeabi_memcpy4
    100            }
    101          }
   \                     ??Update_Record_0: (+1)
   \       0x34   0xB012             ADD      SP,SP,#+72
   \       0x36   0xBC30             POP      {R4,R5}
   \       0x38   0xF85D 0xFB10      LDR      PC,[SP], #+16

   \                                 In section .rodata, align 4
   \        0x0   0x0000'0000        DC32 0
   \        0x4   0x00 0x00          DC8 0, 0
   \        0x6   0x0000             DC16 0
   \        0x8   0x00               DC8 0
   \        0x9   0x00               DC8 ""
   \        0xA                      DS8 9
   \       0x13   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00
   \       0x27                      DS8 1
   \       0x28   0x0000'0000        DC32 0x0
    102          
    103          /**************************************************************************************
    104           *  Subprogram: Remove_Record                                                         *
    105           *                                                                                    * 
    106           *  Purpose: Removes the record from the database                                     *
    107           *                                                                                    * 
    108           *  Inputs:                                                                           *
    109           *       - Val - enum COLOR - Color input                                             *
    110           *                                                                                    * 
    111           *  Outputs:                                                                          *
    112           *       - None                                                                       *
    113           *                                                                                    * 
    114           **************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    115          void Remove_Record(uint32_t Table)
    116          {
   \                     Remove_Record: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB08B             SUB      SP,SP,#+44
   \        0x4   0x0004             MOVS     R4,R0
    117            // setup local variables
    118            struct DataItem dataItem;
    119              
    120            // set the search key (table) in the data items
    121            dataItem.table = Table;
   \        0x6   0x9400             STR      R4,[SP, #+0]
    122          
    123            // remove the item from the linked list
    124            RemoveDataItem(&dataItem);
   \        0x8   0x4668             MOV      R0,SP
   \        0xA   0x.... 0x....      BL       RemoveDataItem
    125          }
   \        0xE   0xB00C             ADD      SP,SP,#+48
   \       0x10   0xBD10             POP      {R4,PC}
    126          
    127          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     104   Get_Record
        88   -> InsertDataItem
        88   -> __aeabi_memclr4
       104   -> __aeabi_memcpy4
        88   -> __aeabi_memcpy4
        88   -> findData
      56   Remove_Record
        56   -> RemoveDataItem
     112   Update_Record
        96   -> __aeabi_memclr4
       112   -> __aeabi_memcpy4
        96   -> __aeabi_memcpy4
        96   -> findData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  ?_0
      44  ?_1
      66  Get_Record
      18  Remove_Record
      60  Update_Record

 
  88 bytes in section .rodata
 144 bytes in section .text
 
 144 bytes of CODE  memory
  88 bytes of CONST memory

Errors: none
Warnings: none
